import json
from telegram import Update
from telegram.ext import ContextTypes
from db.database import get_user

def load_program(program_id):
    with open("data/programs.json", "r", encoding="utf-8") as f:
        programs = json.load(f)
    return programs.get(program_id)

async def plan(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = get_user(update.effective_user.id)
    
    if not user:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.")
        return

    program_id = user[5]  # program_id stored in 6-–π –∫–æ–ª–æ–Ω–∫–µ
    program = load_program(program_id)

    if not program:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—à—É –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.")
        return

    text = f"üèãÔ∏è‚Äç‚ôÇÔ∏è *{program['title']}*\n_{program['description']}_\n\n"
    for section, exercises in program["plan"].items():
        emoji = {
            "warmup": "üî• –†–∞–∑–º–∏–Ω–∫–∞",
            "cardio": "üèÉ –ö–∞—Ä–¥–∏–æ",
            "strength": "üí™ –°–∏–ª–∞",
            "stretch": "üßò –†–∞—Å—Ç—è–∂–∫–∞"
        }.get(section, section.capitalize())
        text += f"*{emoji}:*\n" + "\n".join(f"‚Ä¢ {ex}" for ex in exercises) + "\n\n"

    await update.message.reply_text(text, parse_mode="Markdown")
